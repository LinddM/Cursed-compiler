1,<if_stmt>,if
1,<open_parents>,(
1,<number>,4
1,<rel_op>,>=
1,<number>,5
1,<cond_op>,&&
1,<cond_op>,||
1,<asign_op>,-=
1,<asign_op>,+=
1,<close_parents>,)
1,<open_braces>,{
2,<print>,print
2,<open_parents>,(
2,<string_op>,"
2,<variable>,yes
2,<string_op>,"
2,<close_parents>,)
3,<close_braces>,}
5,<if_stmt>,if
5,<open_parents>,(
5,<number>,4
5,<rel_op>,<=
5,<number>,5
5,<close_parents>,)
5,<open_braces>,{
6,<print>,print
6,<open_parents>,(
6,<string_op>,"
6,<variable>,yes
6,<string_op>,"
6,<close_parents>,)
7,<close_braces>,}
9,<if_stmt>,if
9,<open_parents>,(
9,<number>,4
9,<not_eq_op>,!=
9,<number>,5
9,<close_parents>,)
9,<open_braces>,{
10,<print>,print
10,<open_parents>,(
10,<string_op>,"
10,<variable>,yes
10,<string_op>,"
10,<close_parents>,)
11,<close_braces>,}
14,<class>,class
14,<variable>,Foo
14,<open_braces>,{
15,<type>,int
15,<variable>,key
16,<close_braces>,}
18,<variable>,Foo
18,<variable>,a
19,<variable>,Foo
19,<variable>,b
21,<variable>,a
21,<asign_op>,=
21,<new>,new
21,<variable>,Foo
21,<open_parents>,(
21,<close_parents>,)
23,<variable>,b
23,<asign_op>,=
23,<variable>,a
25,<object>,a.key
25,<asign_op>,=
25,<number>,10
26,<print>,print
26,<open_parents>,(
26,<object>,b.key
26,<close_parents>,)
28,<variable>,a
28,<asign_op>,=
28,<new>,new
28,<variable>,Foo
28,<open_parents>,(
28,<close_parents>,)
29,<variable>,b
29,<asign_op>,=
29,<new>,new
29,<variable>,Foo
29,<open_parents>,(
29,<close_parents>,)
32,<void>,void
32,<variable>,print_str
32,<open_parents>,(
32,<variable>,string
32,<variable>,value
32,<close_parents>,)
33,<void>,void
33,<variable>,print_int
33,<open_parents>,(
33,<type>,int
33,<variable>,value
33,<close_parents>,)
34,<void>,void
34,<variable>,print_bool
34,<open_parents>,(
34,<variable>,bool
34,<variable>,value
34,<close_parents>,)
36,<variable>,def
36,<type>,int
36,<variable>,main
36,<open_parents>,(
36,<close_parents>,)
36,<open_braces>,{
37,<variable>,print_str
37,<open_parents>,(
37,<string_op>,"
37,<variable>,Hello
37,<exclam>,!
37,<string_op>,"
37,<close_parents>,)
38,<variable>,print_int
38,<open_parents>,(
38,<number>,2
38,<arith_op>,+
38,<number>,3
38,<close_parents>,)
39,<variable>,print_bool
39,<open_parents>,(
39,<number>,5
39,<rel_op>,<
39,<number>,9
39,<close_parents>,)
40,<variable>,print_bool
40,<open_parents>,(
40,<number>,5
40,<rel_op>,<
40,<number>,2
40,<close_parents>,)
41,<return>,return
41,<number>,0
42,<close_braces>,}
44,<variable>,print_char
44,<open_parents>,(
44,<char_op>,'
44,<variable>,c
44,<char_op>,'
44,<close_parents>,)
45,<variable>,print_int
45,<open_parents>,(
45,<number>,2
45,<arith_op>,*
45,<number>,3
45,<close_parents>,)
46,<variable>,print_int
46,<open_parents>,(
46,<number>,3
46,<arith_op>,/
46,<number>,3
46,<close_parents>,)
48,<class>,class
48,<variable>,Example
48,<open_braces>,{
49,<void>,void
49,<variable>,main
49,<open_parents>,(
49,<close_parents>,)
49,<open_braces>,{
50,<type>,int
50,<variable>,x
50,<type>,int
50,<variable>,y
51,<variable>,x
51,<asign_op>,=
51,<variable>,read
51,<open_parents>,(
51,<close_parents>,)
52,<variable>,y
52,<asign_op>,=
52,<variable>,read
52,<open_parents>,(
52,<close_parents>,)
53,<print>,print
53,<open_parents>,(
53,<variable>,gcd
53,<open_parents>,(
53,<variable>,x
53,<comma_sep>,,
53,<variable>,y
53,<close_parents>,)
53,<close_parents>,)
54,<close_braces>,}
55,<type>,int
55,<variable>,gcd
55,<open_parents>,(
55,<type>,int
55,<variable>,a
55,<comma_sep>,,
55,<type>,int
55,<variable>,b
55,<close_parents>,)
55,<open_braces>,{
56,<if_stmt>,if
56,<open_parents>,(
56,<variable>,b
56,<asign_op>,=
56,<eq_op>,==
56,<number>,0
56,<close_parents>,)
57,<return>,return
57,<variable>,a
58,<else_stmt>,else
59,<return>,return
59,<variable>,gcd
59,<open_parents>,(
59,<variable>,b
59,<comma_sep>,,
59,<variable>,a
59,<arith_op>,%
59,<variable>,b
59,<close_parents>,)
60,<close_braces>,}
61,<close_braces>,}
63,<class>,class
63,<variable>,ListNode
63,<open_braces>,{
64,<type>,int
64,<variable>,data
65,<variable>,ListNode
65,<variable>,next
66,<void>,void
66,<variable>,setData
66,<open_parents>,(
66,<type>,int
66,<variable>,x
66,<close_parents>,)
66,<open_braces>,{
67,<variable>,data
67,<asign_op>,=
67,<variable>,x
68,<close_braces>,}
69,<close_braces>,}
70,<class>,class
70,error,_estoEsError
70,<open_braces>,{
71,<type>,int
71,<variable>,data
71,<asign_op>,=
71,<number>,0
72,<type>,int
72,error,45varError
73,<type>,int
73,<variable>,myVar
73,<asign_op>,=
73,error,87.e
74,<type>,float
74,<variable>,no_error
75,<type>,float
75,error,err^or
76,<close_braces>,}
77,<class>,class
77,<variable>,List
77,<open_braces>,{
78,<variable>,ListNode
78,<variable>,head
79,<void>,void
79,<variable>,show
79,<open_parents>,(
79,<variable>,ListNode
79,<variable>,list
79,<close_parents>,)
79,<open_braces>,{
80,<variable>,ListNode
80,<variable>,cursor
81,<type>,int
81,<variable>,count
82,<variable>,count
82,<asign_op>,=
82,<number>,0
83,<variable>,cursor
83,<asign_op>,=
83,<variable>,list
84,<while_stmt>,while
84,<open_parents>,(
84,<variable>,cursor
84,<not_eq_op>,!=
84,<null>,null
84,<close_parents>,)
84,<open_braces>,{
85,<variable>,count
85,<asign_op>,=
85,<variable>,count
85,<arith_op>,+
85,<number>,1
86,<print>,print
86,<open_parents>,(
86,<variable>,count
86,<comma_sep>,,
86,<object>,cursor.data
86,<close_parents>,)
87,<variable>,cursor
87,<asign_op>,=
87,<object>,cursor.next
88,<close_braces>,}
89,<close_braces>,}
90,<void>,void
90,<variable>,main
90,<open_parents>,(
90,<close_parents>,)
90,<open_braces>,{
91,<variable>,ListNode
91,<variable>,second
92,<variable>,ListNode
92,<variable>,third
93,<variable>,head
93,<asign_op>,=
93,<new>,new
93,<variable>,ListNode
93,<open_parents>,(
93,<close_parents>,)
94,<object>,head.setData
94,<open_parents>,(
94,<number>,4
94,<close_parents>,)
95,<print>,print
95,<open_parents>,(
95,<object>,head.data
95,<close_parents>,)
96,<variable>,second
96,<asign_op>,=
96,<new>,new
96,<variable>,ListNode
96,<open_parents>,(
96,<close_parents>,)
97,<object>,second.setData
97,<open_parents>,(
97,<number>,5
97,<close_parents>,)
98,<print>,print
98,<open_parents>,(
98,<object>,second.data
98,<close_parents>,)
99,<variable>,third
99,<asign_op>,=
99,<new>,new
99,<variable>,ListNode
99,<open_parents>,(
99,<close_parents>,)
100,<object>,third.setData
100,<open_parents>,(
100,<number>,11
100,<close_parents>,)
101,<print>,print
101,<open_parents>,(
101,<object>,third.data
101,<close_parents>,)
102,<object>,head.next
102,<asign_op>,=
102,<variable>,second
103,<object>,second.next
103,<asign_op>,=
103,<variable>,third
104,<object>,third.next
104,<asign_op>,=
104,<null>,null
105,<variable>,show
105,<open_parents>,(
105,<variable>,head
105,<close_parents>,)
106,<close_braces>,}
107,<close_braces>,}
