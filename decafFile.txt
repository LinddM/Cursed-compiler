if(4>=5 && ||  -= += ){
    print("yes");
}

if(4<=5){
    print("yes");
}

if(4!=5){
    print("yes");
}


class Foo {  //  Declare a class named Foo
    int key;
}

Foo a;   //  Declare a couple of variables that may
Foo b;   //  reference objects of type Foo

a=new Foo();  //  Create a Foo object and assign the
                //  reference to variable a
b = a;          //  b references the same Foo object as a

a.key = 10;
print(b.key);   //  10 gets printed

a = new Foo();  //  a and b will now reference different
b = new Foo();  //  objects


void print_str(string value)
void print_int(int value)
void print_bool(bool value)

def int main(){
    print_str("Hello!"); // result: "Hello!"
    print_int(2+3); // result: "5"
    print_bool(5 < 9); // result: "1"
    print_bool(5 < 2); // result: "0"
    return 0;
}

print_char('c'); // test to print char
print_int(2*3); // test to print mult
print_int(3/3); // test to print div

class Example {
    void main() {
        int x; int y;
        x=read();
        y = read();
        print(gcd(x, y));
    }
    int gcd(int a, int b) {
        if ( b == 0 )
            return a;
        else
            return gcd(b,a%b);
    }
}

class ListNode {
    int data;
    ListNode next;
    void setData(int x) {
        data = x;
    }
}
class _estoEsError {
    int data=0;
    int 45varError;
    int myVar = 87.e
    float no_error;
    float err^or;
}
class List {
    ListNode head;
    void show(ListNode list) {
        ListNode cursor;
        int count;
        count = 0;
        cursor = list;
        while ( cursor != null ) {
            count = count + 1;
            print(count, cursor.data);
            cursor = cursor.next;
        }
    }
    void main() {
        ListNode second;
        ListNode third;
        head = new ListNode();
        head.setData(4);  //  Could use "head.data = 4;"
        print(head.data);
        second = new ListNode();
        second.setData(5);
        print(second.data);
        third = new ListNode();
        third.setData(11);
        print(third.data);
        head.next = second;
        second.next = third;
        third.next=null;
        show(head);
    }
}
